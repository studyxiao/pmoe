services:
  web:
    build:
      context: .
      dockerfile: ./compose/web/Dockerfile
    command: gunicorn app.app:app -c config/gunicorn.py
    # ports:
    #   - "8000:8000"
    expose:
      - 8000
    volumes:
      - ./app:/home/appuser/app
      - ./config:/home/appuser/config
      - ./task:/home/appuser/task
      - ./search:/home/appuser/search
      - ./sms:/home/appuser/sms
    env_file:
      - ./.env
    depends_on:
      - db
      - redis
  db:
    image: mysql:8.0.31
    ports:
      - 3306:3306
    privileged: true
    volumes:
      - db-data:/var/lib/mysql
      - ./compose/mysql/my.cnf:/etc/mysql/conf.d/my.cnf
      - ./compose/mysql/init.sql:/docker-entrypoint-initdb.d/init.sql
    env_file:
      - .env
    restart: always
  redis:
    build: ./compose/redis/
    # image: redis:7-alpine
    ports:
      - 6379:6379
    volumes:
      - redis-data:/data
    env_file:
      - .env
    environment:
      - REDIS_PASSWORD=${REDIS_PASSWORD}
      - ENABLE_OVERCOMMIT_MEMORY=true
    restart: always
  meilisearch:
    image: getmeili/meilisearch:v1.2
    ports:
      - "7700:7700"
    env_file:
      - .env
    volumes:
      - meili-data:/meili_data
  celery_worker:
    build:
      context: .
      dockerfile: ./compose/web/Dockerfile
    stop_signal: SIGINT # 解决 Ctrl + C 传递给子进程问题
    command: [ "/worker.sh" ]
    volumes:
      - ./app:/home/appuser/app
      - ./config:/home/appuser/config
      - ./task:/home/appuser/task
      - ./search:/home/appuser/search
      - ./sms:/home/appuser/sms
    env_file:
      - .env
    depends_on:
      - redis
      - db

  celery_beat:
    build:
      context: .
      dockerfile: ./compose/web/Dockerfile
    command: celery -A task.app beat -l info
    volumes:
      - ./app:/home/appuser/app
      - ./config:/home/appuser/config
      - ./task:/home/appuser/task
      - ./search:/home/appuser/search
      - ./sms:/home/appuser/sms
    env_file:
      - .env
    depends_on:
      - redis
      - db

  flower:
    build:
      context: .
      dockerfile: ./compose/web/Dockerfile
    command: [ "/flower.sh" ]
    volumes:
      - ./app:/home/appuser/app
      - ./config:/home/appuser/config
      - ./task:/home/appuser/task
      - flower-db:/app/flower_db
      - ./search:/home/appuser/search
      - ./sms:/home/appuser/sms
    env_file:
      - .env
    ports:
      - 5555:5555
    depends_on:
      - redis
      - db
      - celery_worker
  nginx:
    build: ./compose/nginx
    ports:
      - "8000:80"
    depends_on:
      - web
volumes:
  db-data:
  redis-data:
  meili-data:
  flower-db:
